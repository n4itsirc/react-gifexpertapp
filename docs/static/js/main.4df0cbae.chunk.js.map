{"version":3,"sources":["components/AgregarCategoria.js","helpers/getGifts.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertapp.js","index.js"],"names":["AgregarCategoria","setCategorias","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifts","categoria","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","gifs","useFetchGifs","key","GiftExpertapp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAmB,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEjBC,mBAAS,IAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,KAiBrD,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATrB,kBAabM,GAba,4CAAH,sDCERO,EAAe,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEnC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,+BAAMA,EAAN,OCHCO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECDZ,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDd0BK,CAAa1B,GAAjCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDhB,EAApD,KAEEoB,GAAW,uBAAGJ,UAAU,yCAAb,WAEb,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACLD,UEfpBkB,EAAgB,WAAO,IAAD,EAGK1C,mBAAS,CAAC,cAHf,mBAGxB2C,EAHwB,KAGZ5C,EAHY,KAK/B,OACI,oCACI,6CACA,kBAAC,EAAD,CAAkBA,cAAgBA,IAClC,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAS,OACrB,kBAAC,EAAD,CAAS2B,IAAM3B,EAAYA,UAAWA,U,MCZ9D8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4df0cbae.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AgregarCategoria = ( { setCategorias } ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias( c => [inputValue, ...c] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAgregarCategoria.propTypes={\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n","export const getGifts = async( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria) }&limit=10&api_key=ayT3U82LdRknN0YPxVbotR8zLJMGmF90`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifts;\r\n}","import React from 'react'\r\n\r\nexport const GiftGridItem = ( { title, url } ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {categoria} </h3>\r\n\r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( (img) => (\r\n                        <GiftGridItem \r\n                            key={ img.id }\r\n                            { ...img }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifts } from '../helpers/getGifts';\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts(categoria)\r\n            .then( gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n                });\r\n            })\r\n    }, [categoria])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport { AgregarCategoria } from './components/AgregarCategoria'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GiftExpertapp = () => {\r\n    \r\n\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n    return (\r\n        <>\r\n            <h2>GiftExpertApp</h2>\r\n            <AgregarCategoria setCategorias={ setCategorias }/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( categoria => \r\n                        <GifGrid key={ categoria } categoria={categoria} />\r\n                    )\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GiftExpertapp } from './GiftExpertapp';\r\nimport './index.css';\r\n\r\n\r\nReactDOM.render(\r\n    <GiftExpertapp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}